--DONE: Noise spike at about +0.35 in clip space (only on iPad).
--DONE: CRT block does not scale. Is this underlying layout issues on iOS? (No, it's not the WebGL. What it is?
--DONE: Reduce sorting burden - if that what's slowing the iPad. (It seems to have an impact.)
--DONE: (pass in number of raids, select sort size)
--DONE: Noise parameters to configuration.
--DONE: Treat formations as units, with their intrinsic dancing patterns.
--DONE: IFF.
--DONE: Electronic calculator output.
--DONE: Start raids further out.
--DONE: Go! button resets timer, restarts raids from origin.
--DONE: Stop text selection.
--DROP: Sensing is on the receiver, not the transmitter. (Actually, both. No changes required.)
--DONE: Forward & Back buttons for tutorial.
--DONE: Explanations on Calculator page.
--DONE: Tweak epsilon to stop endless range and bearing seeky behaviour.
--DONE: Move trace to lower on the CRT.
--DONE: Physical knobs -- get a headless little server app running with a Gonio API.
--DONE: Narrative and on-screen prompts.
--DONE: Each tutorial stage needs entry and exit (Model -> Model) to ensure consistency.
--DONE: PO to decide which raid scenarios to be in narrative.
--DROP: Range indicator should be front of the scale. Sure it used to be,
--DONE: Can we do a walk-through of a raid? -- Yes, WIP.
--DONE: Tutorial strings can be dynamic if we pass model in.
--TODO: Start tutorial with some general gonio swinging.
--TODO: Learning menu of raid types (one, two, 3-6, IFF).
--TODO: Drop down learn menu selection should reset active tutorial.
--TODO: Two planes same bearing scenario (both variants together or separate?)
--TODO: 3-6 scenario
--TODO: IFF scenario
--TODO: Operate mode to only use learnt raid types.
--TODO: Drop any targets moved beyond 100 miles range.
--TODO: Raspberry Pi with touch screen.
--TODO: Physical knobs -- UI app gets gonio setting from server app.
--TODO: Improve that by using WebSockets -> JS -> Subscription -> Msg.
--TODO: Physical knobs -- headless app reads from Arduino (10 bit encoder).
